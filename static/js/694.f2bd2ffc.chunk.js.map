{"version":3,"file":"static/js/694.f2bd2ffc.chunk.js","mappings":"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","sources":["api/api.js","webpack://tech-part-followers/./src/components/TweetsCard/TweetsCard.module.css?c736","components/TweetsCard/TweetsCard.jsx","webpack://tech-part-followers/./src/pages/tweets/Tweets.module.css?e0c8","pages/tweets/Tweets.jsx"],"sourcesContent":["import axios from 'axios';\r\naxios.defaults.baseURL = 'https://645e153212e0a87ac0e71f94.mockapi.io/';\r\n\r\nconst USERS_URL = 'users';\r\n\r\nexport const getUsersPerPage = page => {\r\n  try {\r\n    return axios.get(`${USERS_URL}`, { params: { limit: 3, page } });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const getAllUsers = () => {\r\n  try {\r\n    return axios.get(`${USERS_URL}`);\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const updateFollowers = async (id, user) => {\r\n  try {\r\n    return await axios.put(`${USERS_URL}/${id}`, user);\r\n  } catch (error) {\r\n    console.log(error.message);\r\n  }\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"TweetsCard_wrapper__sDQFP\",\"divider\":\"TweetsCard_divider__znpqh\",\"thumb\":\"TweetsCard_thumb__2m8Vy\",\"avatar\":\"TweetsCard_avatar__D9-pC\",\"infoBox\":\"TweetsCard_infoBox__sKHOG\",\"tweets\":\"TweetsCard_tweets__yXity\",\"followers\":\"TweetsCard_followers__sRfXZ\",\"button\":\"TweetsCard_button__8nwHL\",\"btnFollow\":\"TweetsCard_btnFollow__OOoJ5\",\"btnFollowing\":\"TweetsCard_btnFollowing__OcMRj\"};","import PropTypes from 'prop-types';\r\nimport css from './TweetsCard.module.css';\r\n\r\nconst TweetsCard = ({ user, onFollow }) => {\r\n  const { id, tweets, followers, avatar, following } = user;\r\n\r\n  return (\r\n    <div className={css.wrapper}>\r\n      <div className={css.divider}></div>\r\n      <div className={css.thumb}>\r\n        <img src={avatar} alt=\"avatar\" className={css.avatar} />\r\n      </div>\r\n      <div className={css.infoBox}>\r\n        <span className={css.tweets}>\r\n          {tweets.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')} tweets\r\n        </span>\r\n        <span className={css.followers}>\r\n          {followers.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')} followers\r\n        </span>\r\n        {following ? (\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => {\r\n              onFollow(id);\r\n            }}\r\n            className={`${css.button} ${css.btnFollowing}`}\r\n          >\r\n            Following\r\n          </button>\r\n        ) : (\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => {\r\n              onFollow(id);\r\n            }}\r\n            className={`${css.button} ${css.btnFollow}`}\r\n          >\r\n            Follow\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nTweetsCard.propTypes = {\r\n  user: PropTypes.shape({\r\n    tweets: PropTypes.number.isRequired,\r\n    followers: PropTypes.number.isRequired,\r\n    avatar: PropTypes.string.isRequired,\r\n    following: PropTypes.bool,\r\n  }),\r\n  onFollow: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default TweetsCard;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"link\":\"Tweets_link__SxeKq\",\"list\":\"Tweets_list__J2xhl\",\"button\":\"Tweets_button__8EO35\"};","import { getAllUsers, getUsersPerPage, updateFollowers } from '../../api/api';\r\nimport { useEffect, useState, useRef } from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport TweetsCard from '../../components/TweetsCard/TweetsCard';\r\nimport css from './Tweets.module.css';\r\nimport defaultImg from '../../images/default-img.png';\r\n\r\nconst TweetsPage = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const [totalPages, setTotalPages] = useState(1);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const PER_PAGE = 3;\r\n  const location = useLocation();\r\n  const backLinkRef = useRef(location.state?.from ?? '/');\r\n\r\n  const handleLoadMore = () => {\r\n    setPage(page + 1);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAllUsers().then(response => {\r\n      const res = response.data.length / PER_PAGE;\r\n      setTotalPages(res);\r\n    });\r\n  }, [totalPages, users]);\r\n\r\n  useEffect(() => {\r\n    getUsersPerPage(page)\r\n      .then(response => {\r\n        setUsers(prevState => [...prevState, ...response.data]);\r\n        setIsLoading(false);\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  }, [page]);\r\n\r\n  const handleFollowing = id => {\r\n    const index = users.findIndex(elem => elem.id === id);\r\n    if (users[index].following === true) {\r\n      updateFollowers(id, {\r\n        following: false,\r\n        followers: users[index].followers - 1,\r\n      }).then(response => {\r\n        setUsers(prevState =>\r\n          prevState.map(user =>\r\n            user.id === id\r\n              ? {\r\n                  ...user,\r\n                  following: response.data.following,\r\n                  followers: response.data.followers,\r\n                }\r\n              : user\r\n          )\r\n        );\r\n      });\r\n    } else {\r\n      updateFollowers(id, {\r\n        following: true,\r\n        followers: users[index].followers + 1,\r\n      }).then(response => {\r\n        setUsers(prevState =>\r\n          prevState.map(user =>\r\n            user.id === id\r\n              ? {\r\n                  ...user,\r\n                  following: response.data.following,\r\n                  followers: response.data.followers,\r\n                }\r\n              : user\r\n          )\r\n        );\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {backLinkRef && (\r\n        <Link to={backLinkRef.current} className={css.link}>\r\n          Go back\r\n        </Link>\r\n      )}\r\n      <ul className={css.list}>\r\n        {isLoading ? (\r\n          <li className={css.item}>\r\n            <img src={defaultImg} alt=\"default\" />\r\n          </li>\r\n        ) : (\r\n          users.length > 0 &&\r\n          users.map(user => {\r\n            return (\r\n              <li key={user.id} className={css.item}>\r\n                <TweetsCard user={user} onFollow={handleFollowing} />\r\n              </li>\r\n            );\r\n          })\r\n        )}\r\n      </ul>\r\n      {page < totalPages && (\r\n        <button type=\"button\" onClick={handleLoadMore} className={css.button}>\r\n          Load more\r\n        </button>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TweetsPage;\r\n"],"names":["axios","defaults","baseURL","USERS_URL","updateFollowers","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","id","user","wrap","_context","prev","next","put","concat","abrupt","sent","t0","console","log","message","stop","_x","_x2","apply","arguments","onFollow","tweets","followers","avatar","following","_jsxs","className","css","children","_jsx","src","alt","toString","replace","type","onClick","_location$state$from","_location$state","_useState","useState","_useState2","_slicedToArray","users","setUsers","_useState3","_useState4","page","setPage","_useState5","_useState6","totalPages","setTotalPages","_useState7","_useState8","isLoading","setIsLoading","location","useLocation","backLinkRef","useRef","state","from","useEffect","get","error","getAllUsers","then","response","res","data","length","params","limit","getUsersPerPage","prevState","_toConsumableArray","catch","handleFollowing","index","findIndex","elem","map","_objectSpread","_Fragment","Link","to","current","link","list","item","TweetsCard","button"],"sourceRoot":""}