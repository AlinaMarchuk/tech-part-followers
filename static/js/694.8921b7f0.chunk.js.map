{"version":3,"file":"static/js/694.8921b7f0.chunk.js","mappings":"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","sources":["api/api.js","webpack://tech-part-followers/./src/components/TweetsCard/TweetsCard.module.css?c736","components/TweetsCard/TweetsCard.jsx","webpack://tech-part-followers/./src/pages/tweets/Tweets.module.css?e0c8","pages/tweets/Tweets.jsx"],"sourcesContent":["import axios from 'axios';\r\naxios.defaults.baseURL = 'https://645e153212e0a87ac0e71f94.mockapi.io/';\r\n\r\nconst USERS_URL = 'users';\r\n\r\nexport const getUsersPerPage = page => {\r\n  try {\r\n    return axios.get(`${USERS_URL}`, { params: { limit: 3, page } });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const getAllUsers = () => {\r\n  try {\r\n    return axios.get(`${USERS_URL}`);\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const updateFollowers = async user => {\r\n  try {\r\n    return await axios.put(`${USERS_URL}/${user.id}`, user);\r\n  } catch (error) {\r\n    console.log(error.message);\r\n  }\r\n};\r\n\r\nexport const getAllFollowings = () => {\r\n  try {\r\n    return axios.get(`${USERS_URL}`);\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"TweetsCard_wrapper__sDQFP\",\"divider\":\"TweetsCard_divider__znpqh\",\"thumb\":\"TweetsCard_thumb__2m8Vy\",\"avatar\":\"TweetsCard_avatar__D9-pC\",\"infoBox\":\"TweetsCard_infoBox__sKHOG\",\"tweets\":\"TweetsCard_tweets__yXity\",\"followers\":\"TweetsCard_followers__sRfXZ\",\"button\":\"TweetsCard_button__8nwHL\",\"btnFollow\":\"TweetsCard_btnFollow__OOoJ5\",\"btnFollowing\":\"TweetsCard_btnFollowing__OcMRj\"};","import { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { updateFollowers } from \"../../api/api\";\r\nimport css from \"./TweetsCard.module.css\";\r\n\r\nconst TweetsCard = ({ user }) => {\r\n  const { tweets, followers, avatar, following = false } = user;\r\n  const [isFollowing, setIsFollowing] = useState(following);\r\n  const [followerCount, setFollowerCount] = useState(followers);\r\n\r\n  const handleFollowing = () => {\r\n    const obj = { ...user };\r\n\r\n    if (isFollowing) {\r\n      obj.followers = obj.followers - 1;\r\n      obj.following = false;\r\n    } else {\r\n      obj.followers = obj.followers + 1;\r\n      obj.following = true;\r\n    }\r\n    updateFollowers(obj).then((response) => {\r\n      setFollowerCount(response.data.followers);\r\n    });\r\n    setIsFollowing(!isFollowing);\r\n  };\r\n\r\n  return (\r\n    <div className={css.wrapper}>\r\n      <div className={css.divider}></div>\r\n      <div className={css.thumb}>\r\n        <img src={avatar} alt=\"avatar\" className={css.avatar} />\r\n      </div>\r\n      <div className={css.infoBox}>\r\n        <span className={css.tweets}>\r\n          {tweets.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")} tweets\r\n        </span>\r\n        <span className={css.followers}>\r\n          {followerCount.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}{\" \"}\r\n          followers\r\n        </span>\r\n        {isFollowing ? (\r\n          <button\r\n            type=\"button\"\r\n            onClick={handleFollowing}\r\n            className={`${css.button} ${css.btnFollowing}`}\r\n          >\r\n            Following\r\n          </button>\r\n        ) : (\r\n          <button\r\n            type=\"button\"\r\n            onClick={handleFollowing}\r\n            className={`${css.button} ${css.btnFollow}`}\r\n          >\r\n            Follow\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nTweetsCard.propTypes = {\r\n  user: PropTypes.shape({\r\n    tweets: PropTypes.number.isRequired,\r\n    followers: PropTypes.number.isRequired,\r\n    avatar: PropTypes.string.isRequired,\r\n    following: PropTypes.bool,\r\n  }),\r\n};\r\n\r\nexport default TweetsCard;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Tweets_list__J2xhl\",\"button\":\"Tweets_button__8EO35\"};","import { getAllUsers, getUsersPerPage } from '../../api/api';\r\nimport { useEffect, useState } from 'react';\r\nimport TweetsCard from '../../components/TweetsCard/TweetsCard';\r\nimport css from './Tweets.module.css';\r\nimport defaultImg from '../../images/default-img.png';\r\n\r\nconst TweetsPage = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const [totalPages, setTotalPages] = useState(1);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const PER_PAGE = 3;\r\n  const handleLoadMore = () => {\r\n    setPage(page + 1);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAllUsers().then(response => {\r\n      const res = response.data.length / PER_PAGE;\r\n      setTotalPages(res);\r\n    });\r\n  }, [totalPages]);\r\n\r\n  useEffect(() => {\r\n    getUsersPerPage(page)\r\n      .then(response => {\r\n        setUsers(prevState => [...prevState, ...response.data]);\r\n        setIsLoading(false);\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  }, [page]);\r\n\r\n  return (\r\n    <>\r\n      <ul className={css.list}>\r\n        {isLoading ? (\r\n          <li className={css.item}>\r\n            <img src={defaultImg} alt=\"default\" />\r\n          </li>\r\n        ) : (\r\n          users.length > 0 &&\r\n          users.map(user => {\r\n            return (\r\n              <li key={user.id} className={css.item}>\r\n                <TweetsCard user={user} />\r\n              </li>\r\n            );\r\n          })\r\n        )}\r\n      </ul>\r\n      {page < totalPages && (\r\n        <button type=\"button\" onClick={handleLoadMore} className={css.button}>\r\n          Load more\r\n        </button>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TweetsPage;\r\n"],"names":["axios","defaults","baseURL","USERS_URL","updateFollowers","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","user","wrap","_context","prev","next","put","concat","id","abrupt","sent","t0","console","log","message","stop","_x","apply","arguments","tweets","followers","avatar","_user$following","following","_useState","useState","_useState2","_slicedToArray","isFollowing","setIsFollowing","_useState3","_useState4","followerCount","setFollowerCount","handleFollowing","obj","_objectSpread","then","response","data","_jsxs","className","css","children","_jsx","src","alt","toString","replace","type","onClick","users","setUsers","page","setPage","_useState5","_useState6","totalPages","setTotalPages","_useState7","_useState8","isLoading","setIsLoading","useEffect","get","error","getAllUsers","res","length","params","limit","getUsersPerPage","prevState","_toConsumableArray","catch","_Fragment","list","item","map","TweetsCard","button"],"sourceRoot":""}